#!/usr/bin/python

import ConfigParser
import logging.config
import signal
import sys

from threading import Thread

# Check the command line arguments
if len(sys.argv) != 2:
    print "Usage: reducer_service [config file]"
    sys.exit(-1)

# Set up the logging configuration
logging.config.fileConfig(sys.argv[1])
logging.getLogger('boto').setLevel(logging.INFO)

from smcity.analytics.reducer import Reducer
from smcity.models.aws.aws_job import AwsJobFactory
from smcity.models.aws.aws_reduce_queue import AwsReduceQueue
from smcity.polygons.polygon_strategy_factory import PolygonStrategyFactory

# Load the configuration settings
config = ConfigParser.ConfigParser()
configFile = open(sys.argv[1])
config.readfp(configFile)
configFile.close()

# Set up the required components
job_factory = AwsJobFactory(config, PolygonStrategyFactory())
reduce_queue = AwsReduceQueue(config)

# Spin up the reducer thread
reducer = Reducer(job_factory, reduce_queue)
reducer_thread = Thread(target=reducer.reduce_results)
reducer_thread.is_deamon = True
reducer_thread.start()

def kill_signal_handler(signal, frame):
    print 'Caught CTRL-C Signal. Shutting down...'
    reducer.shutdown()
 
    sys.exit(0)

signal.signal(signal.SIGINT, kill_signal_handler)
signal.pause()
